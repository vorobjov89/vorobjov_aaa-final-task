class Pizza:
    """
    –ö–ª–∞—Å—Å –æ–ø–∏—Å—ã–≤–∞–µ—Ç –ø–∏—Ü—Ü—É
    """
    def __init__(self, recipe: dict, size: str = 'L', emoji: str = 'üçï'):
        """
        :param recipe: –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã –ø–∏—Ü—Ü—ã;
        :param size: —Ä–∞–∑–º–µ—Ä –ø–∏—Ü—Ü—ã;
        :param emoji: –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –∫–∞–∂–¥–æ–º—É —Ç–∏–ø—É –ø–∏—Ü—Ü—ã –Ω–∞–∑–Ω–∞—á–µ–Ω —Å–≤–æ–π —Å–º–∞–π–ª–∏–∫.
        """
        self.size = size
        self.recipe = recipe
        self.emoji = emoji

    def __eq__(self, other) -> bool:
        """
        –ú–∞–≥–∏—á–µ—Å–∫–∏–π –º–µ—Ç–æ–¥, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç True, –µ—Å–ª–∏ –¥–≤–µ –ø–∏—Ü—Ü—ã –æ–¥–∏–Ω–∞–∫–æ–≤—ã, –∏–Ω–∞—á–µ - False
        """
        return (self.size == other.size and
                self.recipe == other.recipe and
                self.__class__ == other.__class__)

    def dict(self) -> dict:
        """
        :return: –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã –≤ –≤–∏–¥–µ —Å–ª–æ–≤–∞—Ä—è.
        """
        return self.recipe

    def __repr__(self) -> str:
        """
        –ú–∞–≥–∏—á–µ—Å–∫–∏–π –º–µ—Ç–æ–¥, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–∏—Ü—Ü–µ: –Ω–∞–∑–≤–∞–Ω–∏–µ, —Å–º–∞–π–ª–∏–∫: –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã
        """
        ingredients = ', '.join(list(self.dict().values()))
        output = f'- {type(self).__name__} {self.emoji}: {ingredients}'
        return output

    @staticmethod
    def menu() -> list:
        """
        :return: —Å–ø–∏—Å–æ–∫ –ø–æ–¥–∫–ª–∞—Å—Å–æ–≤ –∫–ª–∞—Å—Å–∞ –ø–∏—Ü—Ü—ã - —Ç–æ –µ—Å—Ç—å –≤–∏–¥–æ–≤ –ø–∏—Ü—Ü.
        """
        return Pizza.__subclasses__()

    @staticmethod
    def order(ordered_pizza: str) -> type:
        """
        –ü–æ —Ç–µ–∫—Å—Ç–æ–≤–æ–º—É –∏–º–µ–Ω–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–¥–∫–ª–∞—Å—Å (—Ç–æ –µ—Å—Ç—å –≤–∏–¥) –ø–∏—Ü—Ü—ã. –ò–º—è –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ —Å –±–æ–ª—å—à–æ–π –±—É–∫–≤—ã.
        –ï—Å–ª–∏ –ø–æ –∏–º–µ–Ω–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞—à–ª–æ—Å—å, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –ú–∞—Ä–≥–∞—Ä–∏—Ç–∞.
        :param ordered_pizza:
        :return:
        """
        for pizza_item in Pizza.menu():
            if pizza_item.__name__.lower() == ordered_pizza.lower():
                return pizza_item
        else:
            print('–¢–∞–∫–æ–≥–æ —É –Ω–∞—Å –Ω–µ—Ç! –õ—É—á—à–µ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ú–∞—Ä–≥–∞—Ä–∏—Ç—É!')
            return Margherita


class Margherita(Pizza):
    """
    –ö–ª–∞—Å—Å –æ–ø–∏—Å—ã–≤–∞–µ—Ç –ø–∏—Ü—Ü—É –ú–∞—Ä–≥–∞—Ä–∏—Ç–∞
    """
    def __init__(self, recipe: dict = None, size: str = 'L', emoji: str = 'üßÄ'):
        if recipe is None:
            recipe = {'sauce': 'tomato sauce',
                      'cheese': 'mozzarella',
                      'vegs': 'tomatoes'
                      }
        super().__init__(recipe, size, emoji)


class Hawaiian(Pizza):
    """
    –ö–ª–∞—Å—Å –æ–ø–∏—Å—ã–≤–∞–µ—Ç –ì–∞–≤–∞–π—Å–∫—É—é –ø–∏—Ü—Ü—É
    """
    def __init__(self, recipe: dict = None, size: str = 'L', emoji: str = 'üçç'):
        if recipe is None:
            recipe = {'sauce': 'tomato sauce',
                      'cheese': 'mozzarella',
                      'meet': 'chicken',
                      'vegs': 'pineapples'
                      }
        super().__init__(recipe, size, emoji)


class Pepperoni(Pizza):
    """
    –ö–ª–∞—Å—Å –æ–ø–∏—Å—ã–≤–∞–µ—Ç –ø–∏—Ü—Ü—É –ü–µ–ø–ø–µ—Ä–æ–Ω–∏
    """

    def __init__(self, recipe: dict = None, size: str = 'L', emoji: str = 'üçï'):
        if recipe is None:
            recipe = {'sauce': 'tomato sauce',
                      'cheese': 'mozzarella',
                      'meet': 'pepperoni',
                      }
        super().__init__(recipe, size, emoji)
